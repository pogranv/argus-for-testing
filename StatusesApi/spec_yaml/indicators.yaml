openapi: 3.0.3
paths:
  /indicators/create:
    post:
      description: Создание датчика
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIndicatorRequest'
        required: true
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorIdResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /indicators/update:
    post:
      description: Редактирование датчика по ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIndicatorRequest'
        required: true
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorIdResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /indicators:
    get:
      description: Получение списка всех датчиков или информации о конкретном датчике по ID
      parameters:
        - name: id
          in: query
          required: false
          description: (опционально) ID запрашиваемого датчика. Если указан, возвращается информация только о данном датчике.
          schema:
            type: string
      responses:
        '200':
          description: Успешно получен список датчиков или информация о конкретном датчике
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorsResponse'
        '204':
          description: Датчики не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          $ref: '#/components/responses/NotFound'

  /indicators/trigger:
    post:
      description: Срабатывание датчика для создания тикета
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerIndicatorRequest'
        required: true
      responses:
        '200':
          description: Успешно создан тикет
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketIdResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    BaseIndicator:  # Общая структура для создания/обновления датчиков
      type: object
      required:
        - ticketTitle
        - ticketDescription
        - ticketPriority
        - ticketDeadline
        - businessProcessId
      properties:
        ticketTitle:
          type: string
          description: Название тикета
        ticketDescription:
          type: string
          description: Описание тикета
        ticketPriority:
          $ref: '#/components/schemas/Priority'
        ticketDeadline:
          $ref: '#/components/schemas/Deadline'
        businessProcessId:
          type: string
          description: ID бизнес процесса

    CreateIndicatorRequest:
      allOf:
        - $ref: '#/components/schemas/BaseIndicator'

    UpdateIndicatorRequest:
      allOf:
        - $ref: '#/components/schemas/BaseIndicator'
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              description: ID редактируемого датчика

    IndicatorIdResponse:
      type: object
      required:
        - indicatorId
      properties:
        indicatorId:
          type: string
          description: ID датчика

    TicketIdResponse:
      type: object
      required:
        - ticketId
      properties:
        ticketId:
          type: string
          description: ID созданного тикета

    TriggerIndicatorRequest:
      type: object
      required:
        - indicatorId
      properties:
        indicatorId:
          type: string
          description: ID датчика, который сработал

    IndicatorsResponse:
      type: object
      required:
        - indicators
      properties:
        indicators:
          type: array
          items:
            $ref: '#/components/schemas/IndicatorResponse'

    IndicatorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseIndicator'
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              description: ID датчика

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Описание ошибки

    Priority:
      type: string
      description: Приоритет тикета
      enum:
        - High
        - Medium
        - Low

    Deadline:
      type: string
      format: date-time
      description: Дедлайн для тикета

  responses:
    BadRequest:
      description: Неверные данные
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Ресурс не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'