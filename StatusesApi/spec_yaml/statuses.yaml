openapi: 3.0.3
info:
  title: API для создания статусов
  version: 1.0.0
paths:
  api/v1/statuses/create:
    post:
      description: Создание нового статуса
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusBaseRequest'
        required: true
      responses:
        '200':
          description: Успешно создан статус
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusIdResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  api/v1/statuses/update:
    post:
      description: Редактирование статуса по ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStatusRequest'
        required: true
      responses:
        '200':
          description: Успешно отредактирован статус
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusIdResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  api/v1/statuses:
    get:
      description: Получение списка статусов или конкретного статуса по ID
      parameters:
        - name: ids
          in: query
          required: false
          description: (опционально) ID запрашиваемых статусов. Если указаны, возвращаются только они.
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Успешно получен статус или список статусов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  api/v1/graphs/create:
    post:
      description: Создание графа статусов с переходами
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGraphRequest'
        required: true
      responses:
        '200':
          description: Успешно создан граф
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphIdResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  internal/v1/statuses/transitions:
    get:
      description: Получение списка доступных статусов для перехода из заданного статуса
      parameters:
        - name: statusId
          in: query
          required: false
          description: (опционально) ID текущего статуса. Если не указан, возвращается начальный статус.
          schema:
            type: string
        - name: graphId
          in: query
          required: true
          description: ID графа статусов.
          schema:
            type: string
      responses:
        '200':
          description: Успешно получен список доступных статусов для перехода
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitionsResponse'
        '404':
          $ref: '#/components/responses/NotFound'

  api/v1/graphs:
    get:
      description: Получение списка графов статусов или конкретного графа по ID
      parameters:
        - name: ids
          in: query
          required: false
          description: (опционально) ID запрашиваемых графов. Если указаны, возвращаются только они.
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Успешно получены графы статусов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

components:
  schemas:
    Notification:
      type: object
      properties:
        deliveryType:
          type: string
          description: Тип доставки уведомления
          enum:
            - phone
            - email
            - sms
        pingInterval:
          type: integer
          description: Интервал пинга в минутах (если пинг не единоразовый)
          format: int32

    CommentRequest:
      type: object
      properties:
        text:
          type: string
          description: Текст комментария
        userIds:
          type: array
          items:
            type: integer
          description: ID пользователей, которых нужно призвать

    CommentResponse:
      type: object
      properties:
        text:
          type: string
          description: Текст комментария
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'

    UserInfo:
      type: object
      required:
        - id
        - userName
        - avatar
      properties:
        id:
          type: integer
          description: ID автора
        userName:
          type: string
          description: Имя автора
        avatar:
          type: string
          description: URL аватара автора


    StatusBaseRequest:
      allOf:
        - $ref: '#/components/schemas/StatusBase'
        - type: object
          properties:
            comment:
              $ref: '#/components/schemas/Comment'

    StatusBase:
      type: object
      required:
        - name
        - description
        - dutyId
      properties:
        name:
          type: string
          description: Название статуса
        description:
          type: string
          description: Описание статуса
        escalationSLA:
          type: integer
          description: SLA для эскалации в минутах
          format: int32
        notification:
          $ref: '#/components/schemas/Notification'
        dutyId:
          type: integer
          description: ID дежурства из сервиса дежурств


    StatusResponse:
      allOf:
        - $ref: '#/components/schemas/StatusBase'
        - type: object
          properties:
            comment:
              $ref: '#/components/schemas/CommentResponse'
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              description: ID статуса

    UpdateStatusRequest:
      allOf:
        - $ref: '#/components/schemas/StatusBaseRequest'
        - type: object
          required: 
            - statusId
          properties:
            statusId:
              type: string
              description: ID статуса для редактирования

    StatusIdResponse:
      type: object
      required:
        - statusId
      properties:
        statusId:
          type: string
          description: ID статуса

    StatusesResponse:
      type: object
      required:
        - statuses
      properties:
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/StatusResponse'

    GraphResponse:
      type: object
      required:
        - id
        - name
        - description
        - statuses
      properties:
        id:
          type: string
          description: ID графа
        name:
          type: string
          description: Название графа
        description:
          type: string
          description: Описание графа
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/StatusResponse'

    GraphsResponse:
      type: object
      properties:
        graphs:
          type: array
          items:
            $ref: '#/components/schemas/GraphResponse'

    TransitionsResponse:
      type: object
      properties:
        availableStatusIds:
          type: array
          items:
            type: object
            description: Список ID доступных статусов для перехода и их названия
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
          

    CreateGraphRequest:
      type: object
      required:
        - name
        - description
        - vertexes
        - edges
      properties:
        name:
          type: string
          description: Название графа
        description:
          type: string
          description: Описание графа
        vertexes:
          type: array
          items:
            type: string
            description: Id статусов. Передается для того, чтобы определять порядковый номер статусов. Индекс в массиве = порядковый номер
        edges:
          type: array
          items:
            type: object
            required:
              - from
              - to
            properties:
              from:
                type: string
                description: ID начального статуса
              to:
                type: string
                description: ID конечного статуса

    GraphIdResponse:
      type: object
      required:
        - graphId
      properties:
        graphId:
          type: string
          description: ID созданного графа

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Описание ошибки

  responses:
    BadRequest:
      description: Неверные данные или недопустимые поля
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Ресурс не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'