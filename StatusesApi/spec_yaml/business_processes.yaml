openapi: 3.0.3
info:
  title: API для создания статусов
  version: 1.0.0
paths:
  api/v1/business-processes/create:
    post:
      description: Создание нового бизнес-процесса
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseProcessRequest'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/ProcessCreated'
        '400':
          $ref: '#/components/responses/BadRequest'

  api/v1/business-processes/update:
    post:
      description: Редактирование существующего бизнес-процесса
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProcessRequest'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/ProcessUpdated'
        '400':
          $ref: '#/components/responses/BadRequest'

  api/v1/business-processes:
    get:
      description: Получение списка бизнес-процессов
      responses:
        '200':
          description: Список бизнес-процессов
          content:
            application/json:
              schema:
                type: object
                properties:
                  processes:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProcessSummary'

  api/v1/tickets/create:
    post:
      description: Создание нового тикета
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseTicketRequest'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/TicketCreated'
        '400':
          $ref: '#/components/responses/BadRequest'

  api/v1/tickets/update:
    post:
      description: Редактирование существующего тикета
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTicketRequest'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/TicketUpdated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  api/v1/tickets/{ticketId}:
    get:
      description: Получение информации о тикете
      parameters:
        - $ref: '#/components/parameters/TicketId'
      responses:
        '200':
          $ref: '#/components/responses/TicketDetails'
        '404':
          $ref: '#/components/responses/NotFound'

  api/v1/tickets/{ticketId}/comments:
    post:
      description: Добавление комментария к тикету
      parameters:
        - $ref: '#/components/parameters/TicketId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCommentRequest'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/CommentAdded'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  api/v1/tickets/{ticketId}/status:
    put:
      description: Изменение статуса тикета
      parameters:
        - $ref: '#/components/parameters/TicketId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTicketStatusRequest'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/TicketStatusUpdated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  api/v1/processes/{processId}:
    get:
      description: Получение информации о процессе и всех тикетах в нем
      parameters:
        - name: processId
          in: path
          required: true
          schema:
            type: string
          description: ID процесса
      responses:
        '200':
          $ref: '#/components/responses/ProcessWithTickets'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    ProcessSummary:
      type: object
      required:
        - id
        - name
        - description
      properties:
        id:
          type: string
          description: Уникальный идентификатор бизнес-процесса
        name:
          type: string
          description: Название бизнес-процесса
        description:
          type: string
          description: Краткое описание бизнес-процесса

    BaseTicket:
      type: object
      required:
        - name
        - description
        - priority
        - deadline
      properties:
        name:
          type: string
          description: Название тикета
        description:
          type: string
          description: Описание тикета
        priority:
          type: string
          description: Приоритет тикета
          enum:
            - High
            - Medium
            - Low
        deadline:
          type: string
          format: date-time
          description: Дата и время дедлайна тикета

    BaseProcess:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          description: Название процесса
        description:
          type: string
          description: Описание процесса

    AddCommentRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: Текст нового комментария

    UpdateTicketStatusRequest:
      type: object
      required:
        - statusId
      properties:
        statusId:
          type: string
          description: ID нового статуса тикета

    # Вложенные структуры
    BaseTicketRequest:
      allOf:
        - $ref: '#/components/schemas/BaseTicket'
        - type: object
          properties:
            processId:
              type: string
              description: ID бизнес-процесса, которому принадлежит тикет

    UpdateTicketRequest:
      allOf:
        - $ref: '#/components/schemas/BaseTicket'
        - type: object
          required:
            - ticketId
          properties:
            ticketId:
              type: string
              description: ID тикета, который нужно обновить

    BaseProcessRequest:
      allOf:
        - $ref: '#/components/schemas/BaseProcess'
        - type: object
          properties:
            graphId:
              type: string
              description: ID графа статусов, связанного с процессом

    UpdateProcessRequest:
      allOf:
        - $ref: '#/components/schemas/BaseProcess'
        - type: object
          required:
            - processId
          properties:
            processId:
              type: string
              description: ID процесса, который нужно обновить

    TicketResponse:
      type: object
      required:
        - id
        - name
        - description
        - type
        - priority
        - deadline
        - created
        - updated
        - author
        - assignee
        - status
        - comments
      properties:
        id:
          type: string
          description: ID тикета
        name:
          type: string
          description: Название тикета
        description:
          type: string
          description: Описание тикета
        priority:
          type: string
          description: Приоритет тикета
          enum:
            - High
            - Medium
            - Low
        deadline:
          type: string
          format: date-time
          description: Дедлайн по решению тикета в формате ISO 8601
        created:
          type: string
          format: date-time
          description: Дата и время создания тикета в формате ISO 8601
        updated:
          type: string
          format: date-time
          description: Дата и время обновления тикета в формате ISO 8601
        author:
          $ref: '#/components/schemas/UserInfo'
        assignee:
          $ref: '#/components/schemas/UserInfo'
        status:
          type: object
          required:
            - id
            - name
            - availableTransitions
          properties:
            id:
              type: string
              description: ID статуса тикета
            name:
              type: string
              description: Название статуса тикета
            availableTransitions:
              type: array
              items:
                type: object
                required:
                  - id
                  - name
                properties:
                  id:
                    type: string
                    description: ID статуса, в который можно перейти
                  name:
                    type: string
                    description: Название статуса, в который можно перейти
        comments:
          type: array
          items:
            type: object
            required:
              - text
              - author
              - created
              - mentionedUserIds
            properties:
              text:
                type: string
                description: Текст комментария
              author:
                $ref: '#/components/schemas/UserInfo'
              created:
                type: string
                format: date-time
                description: Дата и время создания комментария
              mentionedUserIds:
                type: array
                items:
                  $ref: '#/components/schemas/UserInfo'
                description: Список пользователей, которых призвали в комментарии

    UserInfo:
      type: object
      required:
        - id
        - userName
        - avatar
      properties:
        id:
          type: integer
          description: ID автора
        userName:
          type: string
          description: Имя автора
        avatar:
          type: string
          description: URL аватара автора

  responses:
    TicketDetails:
      description: Информация о тикете
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TicketResponse'

    BadRequest:
      description: Неверный запрос
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Ресурс не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    ProcessCreated:
      description: Процесс успешно создан
      content:
        application/json:
          schema:
            type: object
            required:
              - processId
            properties:
              processId:
                type: string
                description: ID созданного процесса

    ProcessUpdated:
      description: Процесс успешно обновлен
      content:
        application/json:
          schema:
            type: object
            properties:
              processId:
                type: string
                description: ID обновленного процесса

    CommentAdded:
      description: Комментарий успешно добавлен
      content:
        application/json:
          schema:
            type: object
            required:
              - commentId
            properties:
              commentId:
                type: string
                description: ID добавленного комментария

    TicketCreated:
      description: Тикет успешно создан
      content:
        application/json:
          schema:
            type: object
            required:
              - ticketId
            properties:
              ticketId:
                type: string
                description: ID созданного тикета

    TicketUpdated:
      description: Тикет успешно обновлен
      content:
        application/json:
          schema:
            type: object
            properties:
              ticketId:
                type: string
                description: ID обновленного тикета

    TicketStatusUpdated:
      description: Статус тикета успешно обновлен
      content:
        application/json:
          schema:
            type: object
            required:
              - ticketId
              - statusId
            properties:
              ticketId:
                type: string
                description: ID тикета
              statusId:
                type: string
                description: ID нового статуса тикета

    ProcessWithTickets:
      description: Информация о процессе с тикетами
      content:
        application/json:
          schema:
            type: object
            required:
              - id
              - name
              - description
              - statusGraphId
              - statuses
            properties:
              id:
                type: string
                description: Уникальный идентификатор процесса
              name:
                type: string
                description: Название процесса
              description:
                type: string
                description: Описание процесса
              statusGraphId:
                type: string
                description: Уникальный идентификатор графа статусов, связанного с процессом
              statuses:
                type: array
                description: Список статусов, связанных с процессом
                items:
                  type: object
                  required:
                    - id
                    - index
                    - name
                    - tickets
                  properties:
                    id:
                      type: string
                      description: Уникальный идентификатор статуса
                    index:
                      type: integer
                      description: Порядковый номер статуса в процессе
                    name:
                      type: string
                      description: Название статуса
                    tickets:
                      type: array
                      description: Список тикетов, группированных по данному статусу
                      items:
                        $ref: '#/components/schemas/TicketInStatus'

    TicketInStatus:
      type: object
      required:
        - id
        - name
        - priority
        - deadline
        - assignee
      properties:
        id:
          type: string
          description: Уникальный идентификатор тикета
        name:
          type: string
          description: Название тикета
        priority:
          type: string
          description: Приоритет тикета
          enum:
            - High
            - Medium
            - Low
        deadline:
          type: string
          format: date-time
          description: Дата дедлайна тикета
        assignee:
          $ref: '#/components/schemas/UserInfo'
      

  parameters:
    TicketId:
      name: ticketId
      in: path
      required: true
      schema:
        type: string
      description: ID тикета